name: Upload Release Asset

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - run: go version

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install system dependencies
        run: sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
        

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install dependencies
        run: |
          go mod download
          cd frontend && npm install

      - name: Build application
        run: wails build

      - name: Install packaging tools
        run: sudo apt-get install -y rpm

      - name: Package .deb
        run: |
          mkdir -p package/DEBIAN
          cp DEBIAN/control package/DEBIAN/control
          cp -R ./build/bin/GoPilot* package/
          dpkg-deb --build package GoPilot-${{ env.RELEASE_VERSION }}.deb

      - name: Create tarball
        run: |
          cd ..
          tar --exclude='GoPilot/.*' --exclude='GoPilot/frontend/node_modules/*' -czvf GoPilot.tar.gz GoPilot/
          mkdir -p GoPilot/rpms/SOURCES/ && mv GoPilot.tar.gz GoPilot/rpms/SOURCES/
        
      - name: Package .rpm
        run: |
          rpmbuild -bb --define "_topdir $(pwd)/rpms" rpms/SPECS/GoPilot.spec

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
          files: |
            ./build/bin/GoPilot*
            ./GoPilot-${{ env.RELEASE_VERSION }}.deb
            ./rpms/RPMS/x86_64/GoPilot-${{ env.RELEASE_VERSION }}*.rpm
      
